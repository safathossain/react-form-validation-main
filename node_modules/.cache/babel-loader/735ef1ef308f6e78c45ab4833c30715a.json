{"ast":null,"code":"var _jsxFileName = \"/Users/safathossain/Documents/Ediverse/react-form-validation-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset,\n    trigger\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    reset();\n  }; // console.log(watch());\n  // console.log(errors.name)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-sm-center pt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6 shadow round pb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center pt-3 text-secondary\",\n          children: \"Example Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-form-label\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${errors.name && \"invalid\"}`,\n              ...register(\"name\", {\n                required: \"Name is Required\"\n              }),\n              onKeyUp: () => {\n                trigger(\"name\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-form-label\",\n              children: \"Age:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${errors.age && \"invalid\"}`,\n              ...register(\"age\", {\n                required: \"Age is Required\",\n                min: {\n                  value: 13,\n                  message: \"Minimum Required age is 13\"\n                },\n                max: {\n                  value: 65,\n                  message: \"Maximum allowed age is 65\"\n                },\n                pattern: {\n                  value: /^[0-9]*$/,\n                  message: \"Only numbers are allowed\"\n                }\n              }),\n              onKeyUp: () => {\n                trigger(\"age\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), errors.age && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.age.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-form-label\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${errors.email && \"invalid\"}`,\n              ...register(\"email\", {\n                required: \"Email is Required\",\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: \"Invalid email address\"\n                }\n              }),\n              onKeyUp: () => {\n                trigger(\"email\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-form-label\",\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${errors.phone && \"invalid\"}`,\n              ...register(\"phone\", {\n                required: \"Phone is Required\",\n                pattern: {\n                  value: /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/,\n                  message: \"Invalid phone no\"\n                }\n              }),\n              onKeyUp: () => {\n                trigger(\"phone\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.phone.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-form-label\",\n              children: \"Message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: `form-control ${errors.message && \"invalid\"}`,\n              ...register(\"message\", {\n                required: \"Message is Required\",\n                minLength: {\n                  value: 10,\n                  message: \"Minimum Required length is 10\"\n                },\n                maxLength: {\n                  value: 50,\n                  message: \"Maximum allowed length is 50 \"\n                }\n              }),\n              onKeyUp: () => {\n                trigger(\"message\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), errors.message && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-primary my-3\",\n            value: \"Send message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0CBd5+v5/RCItyCPpugMuiDc3Qc=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/safathossain/Documents/Ediverse/react-form-validation-main/src/App.js"],"names":["useForm","App","register","handleSubmit","formState","errors","reset","trigger","onSubmit","data","console","log","name","required","message","age","min","value","max","pattern","email","phone","minLength","maxLength"],"mappings":"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","sourcesContent":["import \"./App.css\";\n\nimport { useForm } from \"react-hook-form\";\n\nfunction App() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    trigger,\n  } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data);\n    reset();\n  };\n\n\n  // console.log(watch());\n\n  // console.log(errors.name)\n\n  return (\n    <div className=\"container pt-5\">\n      <div className=\"row justify-content-sm-center pt-5\">\n        <div className=\"col-sm-6 shadow round pb-3\">\n          <h1 className=\"text-center pt-3 text-secondary\">Example Form</h1>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">Name:</label>\n              <input\n                type=\"text\"\n                className={`form-control ${errors.name && \"invalid\"}`}\n                {...register(\"name\", { required: \"Name is Required\" })}\n                onKeyUp={() => {\n                  trigger(\"name\");\n                }}\n              />\n              {errors.name && (\n                <small className=\"text-danger\">{errors.name.message}</small>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">Age:</label>\n              <input\n                type=\"text\"\n                className={`form-control ${errors.age && \"invalid\"}`}\n                {...register(\"age\", {\n                  required: \"Age is Required\",\n                  min: {\n                    value: 13,\n                    message: \"Minimum Required age is 13\",\n                  },\n                  max: {\n                    value: 65,\n                    message: \"Maximum allowed age is 65\",\n                  },\n                  pattern: {\n                    value: /^[0-9]*$/,\n                    message: \"Only numbers are allowed\",\n                  }\n                })}\n                onKeyUp={() => {\n                  trigger(\"age\");\n                }}\n              />\n              {errors.age && (\n                <small className=\"text-danger\">{errors.age.message}</small>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">Email:</label>\n              <input\n                type=\"text\"\n                className={`form-control ${errors.email && \"invalid\"}`}\n                {...register(\"email\", { required: \"Email is Required\" ,\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: \"Invalid email address\",\n                }})}\n                onKeyUp={() => {\n                  trigger(\"email\");\n                }}\n              />\n              {errors.email && (\n                <small className=\"text-danger\">{errors.email.message}</small>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">Phone:</label>\n              <input\n                type=\"text\"\n                className={`form-control ${errors.phone && \"invalid\"}`}\n                {...register(\"phone\", { required: \"Phone is Required\",\n                pattern: {\n                  value: /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/,\n                  message: \"Invalid phone no\",\n                },\n               })}\n               onKeyUp={() => {\n                trigger(\"phone\");\n              }}\n              />\n              {errors.phone && (\n                <small className=\"text-danger\">{errors.phone.message}</small>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">Message:</label>\n              <textarea\n                className={`form-control ${errors.message && \"invalid\"}`}\n                {...register(\"message\", { required: \"Message is Required\",\n                minLength: {\n                  value: 10,\n                  message: \"Minimum Required length is 10\",\n                },\n                maxLength: {\n                  value: 50,\n                  message: \"Maximum allowed length is 50 \",\n                }\n               })}\n               onKeyUp={() => {\n                trigger(\"message\");\n              }}\n              ></textarea>\n              {errors.message && (\n                <small className=\"text-danger\">{errors.message.message}</small>\n              )}\n            </div>\n            <input\n              type=\"submit\"\n              className=\"btn btn-primary my-3\"\n              value=\"Send message\"\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}